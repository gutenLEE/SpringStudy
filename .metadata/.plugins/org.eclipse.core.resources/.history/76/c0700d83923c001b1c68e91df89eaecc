package com.spring.crwaling;

import java.io.IOException;
import java.util.ArrayList;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;


@Controller
public class HomeController {
   
   @RequestMapping(value ="/home.do", method = RequestMethod.GET)
   public String home() {
      
      return "home";
   }
   
   @RequestMapping(value="/crawl1.do", method=RequestMethod.GET)
   public ModelAndView crawl(ModelAndView model) {
      
      //Jsoup : https://jsoup.org/
      //Jsoup를 이용해서 네이버 스포츠 크롤링
      String url =
      "https://sports.news.naver.com/wfootball/index.nhn";
      Document doc = null;
      
      try {
         doc = Jsoup.connect(url).get();
      } catch (IOException e) {
         e.printStackTrace();
      }
      
      //주요 뉴스로 나오는 태그를 찾아서 가져오도록 한다.
      Elements element = doc.select("div.home_news");
      System.out.println("################# div.home_news###############");
      System.out.println(element);
      
      // 1. 헤더 부분의 제목을 가져온다.
      String title = element.select("h2").text().substring(0, 4);
      
      System.out.println("================================================");
      System.out.println(title);
      System.out.println("================================================");
      
      ArrayList<String> list_text = new ArrayList<String>();
      ArrayList<String> list_link = new ArrayList<String>();
      
      //2. 하위 뉴스 기사들을 for문 돌면서 출력
      for(Element el : element.select("li")) {
         String text = el.text().toString();
         String link = "https://sports.news.naver.com" +
         el.select("a").attr("href");
         System.out.println(text);
         System.out.println(link);
         
         System.out.println("--------------------------------------------");
         list_text.add(text);
         list_link.add(link);
      }
      
      model.addObject("title", title);
      model.addObject("list_text", list_text);
      model.addObject("list_link", list_link);
      model.setViewName("crawl1");
      
      return model;
   }
   @RequestMapping(value="/crawl2.do", method=RequestMethod.GET)
   @ResponseBody
   public ModelAndView crawl2(ModelAndView model, @RequestParam(value = "index", required=false, defaultValue="0") String index) {
	   
	   	System.out.println("index : " + index);
	   	
	   	String url = "https://movie.naver.com/movie/sdb/rank/rmovie.nhn";
	   	Document doc = null;
	   	
	   	try 
	   	{ 
	   		doc = Jsoup.connect(url).get();
	   	} catch (IOException e) 
	   	{
	   		e.printStackTrace();
	   	}
	   	
	   	switch(index) {
	   		case "1":
	   		case "2":
	   		default:
	   	}
	   	
	    Elements elemen2 = doc.select("div.tab_type_6");
	      System.out.println("################# div.헤드###############");
	      System.out.println("li"+elemen2.select("li").select("a").attr("href"));
	      for(Element a :doc.select("div.tab_type_6").select("li") )

	      
	      //주요 뉴스로 나오는 태그를 찾아서 가져오도록 한다.
	      Elements element = doc.select("div#old_content");
	      System.out.println("################# div.old_content###############");
	      System.out.println("li"+element.select("div.tit5"));
	      
	      ArrayList<String> title = new ArrayList<String>();
	      ArrayList<String> title_link= new ArrayList<String>();
	      System.out.println("================================================");
	      for(Element el : element.select("li")) {
	          String text = el.select("img").attr("alt");
	          String link = "https://movie.naver.com/movie/sdb/rank/rmovie.nhn" +
	          el.select("a").attr("href");
	          System.out.println(text);
	          System.out.println(link);
	          System.out.println("--------------------------------------------");
	          
	          title.add(text);
	          title_link.add(link);
	 
	       }
	      Elements tbody = doc.select("tbody");
	      for(Element e :tbody) {
	    	  System.out.println("티바디"+e.text().toString());
	      }
	    
	      System.out.println("================================================");
	      Elements tit3 = doc.select("div.tit3");
	      ArrayList<String> rank1 = new ArrayList<String>();
	      int count = 1;
			for(Element e : tit3) {
				String rangking = e.text().toString();
				System.out.println((count++)+"위   "+ rangking);
				rank1.add(rangking);
				
			}
		  System.out.println("================================================");

	     
	     
	      
		  model.addObject("title",title);
	      model.addObject("title_link",title_link);
	      model.addObject("rank1", rank1);
	      model.setViewName("crawl2");
	      
	      return model;
     
   }
   
  static ArrayList<String> crawling(String href){
	return null; 
  }
   
}