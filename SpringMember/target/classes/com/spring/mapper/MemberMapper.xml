<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- namespace="com.spring.mapper.MemberMapper는 MemberMapper인퍼페이스(MemberMapper.class)의 이름을 사용한다. -->
<mapper namespace="com.spring.mapper.MemberMapper">

<!-- 


	 HashMap 이용시 추가부분 
	<resultMap type="java.util.HashMap" id="hashmapVO">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
	</resultMap>
	<resultMap type="MemberVO" id="MemberResultMap">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
	</resultMap>
	

 -->
	
	<!-- id는 Mapper.java(여기선 MemberMapper.java)에 동일하게 사용해야된다. -->

	<select id="selectMember"  parameterType="MemberVO"  resultType="MemberVO">
		SELECT * FROM smember where id = #{id}
	</select>
		<select id="getMemberlist" resultType="MemberVO">
		SELECT * FROM smember order by id
	</select>
	
	
	<!-- parameterType 에는 구문에 전달될 파라미터의 패키지 경로를 포함한 전체 클래명이나 별칭이 들어간다 -->
	
	<!-- root-context에서 아래와 같이 typeAliasesPackage를 설정하면 패키지 경로 생략 가능. 
	<property name="typeAliasesPackage" value="com.spring.springmybatis" /> 추가시
	<insert id="insertMember" parameterType="MemberVO" > 로 표현 가능
	-->
	<insert id="insertMember" parameterType="MemberVO" >
		INSERT INTO smember VALUES 
			(#{id, javaType=String}, #{password, javaType=String}, #{name, jdbcType=VARCHAR}, #{age, javaType=Integer} , #{gender, javaType = String}, #{email})
	</insert>

	<update id="updateMember" parameterType="MemberVO">
		UPDATE smember SET name = #{name, javaType=String}, age = #{age, javaType=Integer}, gender = #{gender, javaType = String}, email = #{email} where id = #{id}
	</update>
 	
	<delete id="deleteMember" parameterType="MemberVO">
		DELETE FROM smember WHERE id=#{id}
	</delete>
	
</mapper>
